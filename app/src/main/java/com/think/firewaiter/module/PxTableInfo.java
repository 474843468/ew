package com.think.firewaiter.module;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import com.think.firewaiter.dao.DaoServiceUtil;
import com.think.firewaiter.dao.PxTableAreaDao;
// KEEP INCLUDES END

/**
 * 桌台信息
 */
public class PxTableInfo implements java.io.Serializable,Comparable {

    private Long id;
    /**
     * 对应服务器id
     */
     @SerializedName("id") @Expose
    private String objectId;
    /**
     * 桌位编号)
     */
     @Expose
    private String code;
    /**
     * 桌位名称
     */
     @Expose
    private String name;
    /**
     * 桌位区域(0:大厅 1：包厢)
     */
     @Expose
    private String type;
    /**
     * 建议人数
     */
     @Expose
    private Integer peopleNum;
    /**
     * 桌位状态(0:空闲 1：占用)
     */
     @Expose
    private String status;
    /**
     * 虚拟删除 0：正常 1：删除 2：审核
     */
     @Expose
    private String delFlag;
    /**
     * 排序号
     */
     @Expose
    private Integer sortNo;

    // KEEP FIELDS - put your custom fields here
  public static final String STATUS_EMPTY = "0";
  public static final String STATUS_OCCUPIED = "1";

  public static final String TYPE_HALL = "0";
  public static final String TYPE_PARLOR = "1";
  //持续时间(用于收银端向服务生发送桌台信息)
  @Expose private long duration;
  //实际用餐人数(用于收银端向服务生发送桌台信息)
  @Expose private int actualPeopleNumber;

  //最新状态，从收银端同步
  @Expose private String mStatusNow;
    // KEEP FIELDS END

    public PxTableInfo() {
    }

    public PxTableInfo(Long id) {
        this.id = id;
    }

    public PxTableInfo(Long id, String objectId, String code, String name, String type, Integer peopleNum, String status, String delFlag, Integer sortNo) {
        this.id = id;
        this.objectId = objectId;
        this.code = code;
        this.name = name;
        this.type = type;
        this.peopleNum = peopleNum;
        this.status = status;
        this.delFlag = delFlag;
        this.sortNo = sortNo;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getObjectId() {
        return objectId;
    }

    public void setObjectId(String objectId) {
        this.objectId = objectId;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Integer getPeopleNum() {
        return peopleNum;
    }

    public void setPeopleNum(Integer peopleNum) {
        this.peopleNum = peopleNum;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getDelFlag() {
        return delFlag;
    }

    public void setDelFlag(String delFlag) {
        this.delFlag = delFlag;
    }

    public Integer getSortNo() {
        return sortNo;
    }

    public void setSortNo(Integer sortNo) {
        this.sortNo = sortNo;
    }

    // KEEP METHODS - put your custom methods here

  public long getDuration() {
    return duration;
  }

  public void setDuration(long duration) {
    this.duration = duration;
  }

  public int getActualPeopleNumber() {
    return actualPeopleNumber;
  }

  public void setActualPeopleNumber(int actualPeopleNumber) {
    this.actualPeopleNumber = actualPeopleNumber;
  }

  public String getStatusNow() {
    return mStatusNow;
  }

  public void setStatusNow(String statusNow) {
    mStatusNow = statusNow;
  }

  @Override public int compareTo(Object another) {
    PxTableInfo tableInfo = (PxTableInfo) another;
    String type = tableInfo.getType();
    int typeFlag = this.type.compareTo(type);
    //首先比较type，如果type相同，则比较sortNo
    if (typeFlag == 0){
      Integer sortNo = tableInfo.getSortNo();
      return this.sortNo.compareTo(sortNo);
    }else{
      return typeFlag;
    }
  }

  public String getTag() {
    PxTableArea area = DaoServiceUtil.getTableAreaService()
        .queryBuilder()
        .where(PxTableAreaDao.Properties.Type.eq(getType()))
        .unique();
    return area == null ? "" : area.getName();
  }
    // KEEP METHODS END

}

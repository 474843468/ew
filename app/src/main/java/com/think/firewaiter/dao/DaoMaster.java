package com.think.firewaiter.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.think.firewaiter.dao.OfficeDao;
import com.think.firewaiter.dao.UserDao;
import com.think.firewaiter.dao.PxProductInfoDao;
import com.think.firewaiter.dao.PxProductCategoryDao;
import com.think.firewaiter.dao.PxFormatInfoDao;
import com.think.firewaiter.dao.PxMethodInfoDao;
import com.think.firewaiter.dao.PxTableInfoDao;
import com.think.firewaiter.dao.PxProductFormatRelDao;
import com.think.firewaiter.dao.PxProductMethodRefDao;
import com.think.firewaiter.dao.ShoppingCartDao;
import com.think.firewaiter.dao.UserTableRelDao;
import com.think.firewaiter.dao.PxOptReasonDao;
import com.think.firewaiter.dao.PxProductRemarksDao;
import com.think.firewaiter.dao.PxTableAreaDao;
import com.think.firewaiter.dao.PxPromotioInfoDao;
import com.think.firewaiter.dao.PxPromotioDetailsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 6): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 6;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        OfficeDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        PxProductInfoDao.createTable(db, ifNotExists);
        PxProductCategoryDao.createTable(db, ifNotExists);
        PxFormatInfoDao.createTable(db, ifNotExists);
        PxMethodInfoDao.createTable(db, ifNotExists);
        PxTableInfoDao.createTable(db, ifNotExists);
        PxProductFormatRelDao.createTable(db, ifNotExists);
        PxProductMethodRefDao.createTable(db, ifNotExists);
        ShoppingCartDao.createTable(db, ifNotExists);
        UserTableRelDao.createTable(db, ifNotExists);
        PxOptReasonDao.createTable(db, ifNotExists);
        PxProductRemarksDao.createTable(db, ifNotExists);
        PxTableAreaDao.createTable(db, ifNotExists);
        PxPromotioInfoDao.createTable(db, ifNotExists);
        PxPromotioDetailsDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        OfficeDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        PxProductInfoDao.dropTable(db, ifExists);
        PxProductCategoryDao.dropTable(db, ifExists);
        PxFormatInfoDao.dropTable(db, ifExists);
        PxMethodInfoDao.dropTable(db, ifExists);
        PxTableInfoDao.dropTable(db, ifExists);
        PxProductFormatRelDao.dropTable(db, ifExists);
        PxProductMethodRefDao.dropTable(db, ifExists);
        ShoppingCartDao.dropTable(db, ifExists);
        UserTableRelDao.dropTable(db, ifExists);
        PxOptReasonDao.dropTable(db, ifExists);
        PxProductRemarksDao.dropTable(db, ifExists);
        PxTableAreaDao.dropTable(db, ifExists);
        PxPromotioInfoDao.dropTable(db, ifExists);
        PxPromotioDetailsDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(OfficeDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(PxProductInfoDao.class);
        registerDaoClass(PxProductCategoryDao.class);
        registerDaoClass(PxFormatInfoDao.class);
        registerDaoClass(PxMethodInfoDao.class);
        registerDaoClass(PxTableInfoDao.class);
        registerDaoClass(PxProductFormatRelDao.class);
        registerDaoClass(PxProductMethodRefDao.class);
        registerDaoClass(ShoppingCartDao.class);
        registerDaoClass(UserTableRelDao.class);
        registerDaoClass(PxOptReasonDao.class);
        registerDaoClass(PxProductRemarksDao.class);
        registerDaoClass(PxTableAreaDao.class);
        registerDaoClass(PxPromotioInfoDao.class);
        registerDaoClass(PxPromotioDetailsDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
